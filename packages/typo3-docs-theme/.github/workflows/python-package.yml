name: Python Package

on: [push, pull_request]

jobs:
  lint-code:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [2.7, 3.x]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Python version
        run: python --version
      - name: Pip install
        run: |
          python -m pip install --upgrade pip
          pip install flake8
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  build-package:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Fetch all tags
        run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: "3.x"
      - name: Python version
        run: python --version
      - name: Pip install
        run: |
          python -m pip install --upgrade pip
          pip install setuptools_scm
          pip install wheel
      - name: Show scm_version
        run: |
          python -m setuptools_scm
      - name: Maybe set tag 99.88.77
        run: |
          scm_version=$(python -c "import setuptools_scm as st;print('.'.join(st.get_version().split('.')[:3]))")
          validstr=$(echo "$scm_version" | sed -e 's/[1-9][0-9]*\.\(0\|[1-9][0-9]*\)\.\(0\|[1-9][0-9]*\)/valid/')
          echo Found scm_version:${scm_version}: && echo validates to validstr:${validstr}:
          if [ ! "$validstr" = "valid" ]; then
             echo Create tag '99.88.77'
             git tag | xargs git tag -d
             git tag 99.88.77
             git tag
          else
             echo Given version looks ok.
          fi
      - name: Build sdist
        run: python setup.py sdist
      - name: Build bdist_wheel
        run: python setup.py bdist_wheel
      - name: Remove sdist package
        run: find dist -name "*.tar.gz" -delete
      - name: Archive module
        uses: actions/upload-artifact@v1
        with:
          name: package-dist
          path: dist

  validate-version:
    needs: [build-package]
    runs-on: ubuntu-latest
    steps:
      - name: Download package
        uses: actions/download-artifact@v1
        with:
          name: package-dist
          path: packages
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: "3.x"
      - name: Python version
        run: python --version
      - name: Upgrade pip
        run: pip install --upgrade pip
      - name: Install theme
        run:  pip install $(find packages -name "*.whl")
      - name: Validate theme_version
        run: |
          theme_version=$(python -c "import sphinx_typo3_theme; print(sphinx_typo3_theme.__version__)")
          validstr=$(echo "$theme_version" | sed -e 's/[1-9][0-9]*\.\(0\|[1-9][0-9]*\)\.\(0\|[1-9][0-9]*\)/valid/')
          echo Installed theme_version:${theme_version}: && echo validates to validstr:${validstr}:
          if [ "$validstr" != "valid" ]; then
            echo Invalid theme_version. Expecting a legal version like
            echo '<major>.<minor>.<patch> with major >= 1 and no leading zeros'
            exit 1
          fi

  sphinx-quickstart:
    needs: [build-package]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [2.7, 3.x]
    steps:
      - name: Download package
        uses: actions/download-artifact@v1
        with:
          name: package-dist
          path: packages
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Python version
        run: python --version
      - name: Upgrade pip
        run: pip install --upgrade pip
      - name: Install Sphinx
        run: pip install sphinx
      - name: Install theme
        run: pip install $(find packages -name "*.whl")
      - name: Display theme_version
        run: |
          theme_version=$(python -c "import sphinx_typo3_theme; print(sphinx_typo3_theme.__version__)")
          echo theme_version: ${theme_version}
      - name: Installed modules
        run: pip list
      - name: Sphinx quickstart
        run: |
          sphinx-quickstart --project PROJECT --author AUTHOR --sep --extensions sphinx_typo3_theme --no-use-make-mode --quiet
          echo >> source/conf.py
          echo 'html_theme = "sphinx_typo3_theme"' >> source/conf.py
          echo 'import sphinx_typo3_theme' >> source/conf.py
          echo 'html_theme_path = [sphinx_typo3_theme.get_html_theme_path()]' >> source/conf.py
          echo 'source/conf.py'
          cat source/conf.py
      - name: Sphinx build
        run: |
          sphinx-build -b html source build
      - name: Archive build
        uses: actions/upload-artifact@v1
        with:
          name: sphinx-quickstart-${{ matrix.python-version }}
          path: build
